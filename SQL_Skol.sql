-- MySQL Script generated by MySQL Workbench
-- 03/02/17 10:45:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Skola
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Skola
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Skola` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema Bibliotek
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Svens_Företag
-- -----------------------------------------------------
USE `Skola` ;

-- -----------------------------------------------------
-- Table `Skola`.`Kurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Kurs` (
  `Kurskod` CHAR(6) NOT NULL,
  `KursNamn` VARCHAR(45) NOT NULL,
  `StartDatum` DATE NOT NULL,
  `SlutDatum` DATE NOT NULL,
  `Poäng` INT NOT NULL,
  `Antal deltagare` INT NULL,
  PRIMARY KEY (`Kurskod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Klass`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Klass` (
  `Kod` CHAR(6) NOT NULL,
  `Namn` VARCHAR(45) NOT NULL,
  `Årskurs` YEAR NOT NULL,
  `Antal elever` INT NULL,
  `Kurs_Kurskod` CHAR(6) NOT NULL,
  PRIMARY KEY (`Kod`, `Kurs_Kurskod`),
  INDEX `fk_Klass_Kurs1_idx` (`Kurs_Kurskod` ASC),
  CONSTRAINT `fk_Klass_Kurs1`
    FOREIGN KEY (`Kurs_Kurskod`)
    REFERENCES `Skola`.`Kurs` (`Kurskod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Elev`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Elev` (
  `Personnummber` CHAR(12) NOT NULL,
  `FörNamn` VARCHAR(45) NOT NULL,
  `EfterNamn` VARCHAR(45) NOT NULL,
  `Epost` VARCHAR(45) NOT NULL,
  `Telefon` CHAR(15) NOT NULL,
  `Ort` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Personnummber`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Lokal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Lokal` (
  `Lokalnummber` CHAR(6) NOT NULL,
  `Namn` VARCHAR(45) NOT NULL,
  `Antal platser` INT NULL,
  PRIMARY KEY (`Lokalnummber`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Avdelning`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Avdelning` (
  `Avdelningnummer` CHAR(10) NOT NULL,
  `Namn` VARCHAR(45) NULL,
  PRIMARY KEY (`Avdelningnummer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Lärare`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Lärare` (
  `Änstallningsnummer` CHAR(10) NOT NULL,
  `Förnamn` VARCHAR(45) NOT NULL,
  `Efternamn` VARCHAR(45) NOT NULL,
  `E-post` VARCHAR(45) NOT NULL,
  `Telefon` CHAR(15) NOT NULL,
  `Ort` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Änstallningsnummer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`Elevsbetyg`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`Elevsbetyg` (
  `Elev_Personnummber` CHAR(12) NOT NULL,
  `Kurs_Kurskod` CHAR(6) NOT NULL,
  `Betyg` CHAR(5) NOT NULL,
  PRIMARY KEY (`Elev_Personnummber`, `Kurs_Kurskod`),
  INDEX `fk_Elev_has_Kurs_Kurs1_idx` (`Kurs_Kurskod` ASC),
  INDEX `fk_Elev_has_Kurs_Elev1_idx` (`Elev_Personnummber` ASC),
  CONSTRAINT `fk_Elev_has_Kurs_Elev1`
    FOREIGN KEY (`Elev_Personnummber`)
    REFERENCES `Skola`.`Elev` (`Personnummber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Elev_has_Kurs_Kurs1`
    FOREIGN KEY (`Kurs_Kurskod`)
    REFERENCES `Skola`.`Kurs` (`Kurskod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`KursLokal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`KursLokal` (
  `Kurs_Kurskod` CHAR(6) NOT NULL,
  `Lokal_Lokalnummber` CHAR(6) NOT NULL,
  `Datum` DATE NOT NULL,
  `Tid` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Kurs_Kurskod`, `Lokal_Lokalnummber`, `Datum`, `Tid`),
  INDEX `fk_Kurs_has_Lokal_Lokal1_idx` (`Lokal_Lokalnummber` ASC),
  INDEX `fk_Kurs_has_Lokal_Kurs1_idx` (`Kurs_Kurskod` ASC),
  CONSTRAINT `fk_Kurs_has_Lokal_Kurs1`
    FOREIGN KEY (`Kurs_Kurskod`)
    REFERENCES `Skola`.`Kurs` (`Kurskod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Kurs_has_Lokal_Lokal1`
    FOREIGN KEY (`Lokal_Lokalnummber`)
    REFERENCES `Skola`.`Lokal` (`Lokalnummber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Skola`.`KursLärare`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Skola`.`KursLärare` (
  `Kurs_Kurskod` CHAR(6) NOT NULL,
  `Lärare_Änstallningsnummer` CHAR(10) NOT NULL,
  PRIMARY KEY (`Kurs_Kurskod`, `Lärare_Änstallningsnummer`),
  INDEX `fk_Kurs_has_Lärare_Lärare1_idx` (`Lärare_Änstallningsnummer` ASC),
  INDEX `fk_Kurs_has_Lärare_Kurs1_idx` (`Kurs_Kurskod` ASC),
  CONSTRAINT `fk_Kurs_has_Lärare_Kurs1`
    FOREIGN KEY (`Kurs_Kurskod`)
    REFERENCES `Skola`.`Kurs` (`Kurskod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Kurs_has_Lärare_Lärare1`
    FOREIGN KEY (`Lärare_Änstallningsnummer`)
    REFERENCES `Skola`.`Lärare` (`Änstallningsnummer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Skola`.`Kurs`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Kurs` (`Kurskod`, `KursNamn`, `StartDatum`, `SlutDatum`, `Poäng`, `Antal deltagare`) VALUES ('TEST12', 'Test Automation', '2012-08-09', '2013-12-31', 300, 13);
INSERT INTO `Skola`.`Kurs` (`Kurskod`, `KursNamn`, `StartDatum`, `SlutDatum`, `Poäng`, `Antal deltagare`) VALUES ('PROG22', 'Programming Java', '2012-08-09', '2013-12-31', 280, 15);
INSERT INTO `Skola`.`Kurs` (`Kurskod`, `KursNamn`, `StartDatum`, `SlutDatum`, `Poäng`, `Antal deltagare`) VALUES ('NET32', 'System Developer', '2012-08-09', '2013-12-31', 300, 10);
INSERT INTO `Skola`.`Kurs` (`Kurskod`, `KursNamn`, `StartDatum`, `SlutDatum`, `Poäng`, `Antal deltagare`) VALUES ('ART42', 'Architecture', '2012-08-09', '2013-12-31', 200, 10);
INSERT INTO `Skola`.`Kurs` (`Kurskod`, `KursNamn`, `StartDatum`, `SlutDatum`, `Poäng`, `Antal deltagare`) VALUES ('MAR52', 'Marketing', '2012-08-09', '2013-12-31', 250, 16);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Skola`.`Klass`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Klass` (`Kod`, `Namn`, `Årskurs`, `Antal elever`, `Kurs_Kurskod`) VALUES ('B201', 'Sal2', 2011, 14, 'TEST12');
INSERT INTO `Skola`.`Klass` (`Kod`, `Namn`, `Årskurs`, `Antal elever`, `Kurs_Kurskod`) VALUES ('C301', 'Sal3', 2012, 15, 'PROG22');
INSERT INTO `Skola`.`Klass` (`Kod`, `Namn`, `Årskurs`, `Antal elever`, `Kurs_Kurskod`) VALUES ('D201', 'Sal4', 2013, 14, 'NET32');
INSERT INTO `Skola`.`Klass` (`Kod`, `Namn`, `Årskurs`, `Antal elever`, `Kurs_Kurskod`) VALUES ('E301', 'Sal2', 2014, 15, 'ART42');
INSERT INTO `Skola`.`Klass` (`Kod`, `Namn`, `Årskurs`, `Antal elever`, `Kurs_Kurskod`) VALUES ('A201', 'Sal3', 2015, 16, 'MAR52');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Skola`.`Elev`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('9523452345', 'David ', 'Wilson', 'david@gmail.com', '0832134578', 'Bandhagen');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('9387434877', 'Tim', 'Jery', 'jery@gmail.com', '0834567899', 'Årsta');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('3473487348', 'Jonas', 'Karlsson', 'jonas@gmail.com', '0837838867', 'Sollentuna');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('7447546757', 'Tiimy', 'Tim', 'timmy@gmail.com', '0832777777', 'Eskilstuna');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('7747388999', 'Isak', 'Johnson', 'isak@hotmail.com', '0832459888', 'Vallingby');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('8678999900', 'Amanda', 'Johnson', 'amanda@yahoo.com', '0834567777', 'Årsta');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('8774389903', 'Eva', 'Björk', 'eva@telia.se', '0834567996', 'Bandhagen');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('9347837483', 'Laura', 'Evason', 'laura@telia.se', '0823878672', 'Norsberg');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('9234556788', 'Ove', 'Larsson', 'ove@telia.se', '0839273437', 'Bromma');
INSERT INTO `Skola`.`Elev` (`Personnummber`, `FörNamn`, `EfterNamn`, `Epost`, `Telefon`, `Ort`) VALUES ('9123467899', 'Turin', 'Marisson', 'turin@gmail.com', '0834682632', 'Bromma');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Skola`.`Lokal`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Lokal` (`Lokalnummber`, `Namn`, `Antal platser`) VALUES ('LOK23', 'FolkHuset', 45);
INSERT INTO `Skola`.`Lokal` (`Lokalnummber`, `Namn`, `Antal platser`) VALUES ('LOK24', 'BHuset', 80);
INSERT INTO `Skola`.`Lokal` (`Lokalnummber`, `Namn`, `Antal platser`) VALUES ('LOK', 'RHuset', 50);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Skola`.`Avdelning`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Avdelning` (`Avdelningnummer`, `Namn`) VALUES ('DELBrun', 'Programming');
INSERT INTO `Skola`.`Avdelning` (`Avdelningnummer`, `Namn`) VALUES ('DELRöd', 'Testing');
INSERT INTO `Skola`.`Avdelning` (`Avdelningnummer`, `Namn`) VALUES ('DELGrön', 'Marketing');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Skola`.`Lärare`
-- -----------------------------------------------------
START TRANSACTION;
USE `Skola`;
INSERT INTO `Skola`.`Lärare` (`Änstallningsnummer`, `Förnamn`, `Efternamn`, `E-post`, `Telefon`, `Ort`) VALUES ('TQR12', 'Sara', 'Strömvall', 'sara@nackademin.se', '0832345345', 'Solna');
INSERT INTO `Skola`.`Lärare` (`Änstallningsnummer`, `Förnamn`, `Efternamn`, `E-post`, `Telefon`, `Ort`) VALUES ('TQR13', 'Rafael', 'Silva', 'rafael@nackademin.se', '0834567899', 'Vallingby');
INSERT INTO `Skola`.`Lärare` (`Änstallningsnummer`, `Förnamn`, `Efternamn`, `E-post`, `Telefon`, `Ort`) VALUES ('TQR14', 'Jonas', 'Kjell', 'jonas@nackademin.se', '0832333456', 'Solna');
INSERT INTO `Skola`.`Lärare` (`Änstallningsnummer`, `Förnamn`, `Efternamn`, `E-post`, `Telefon`, `Ort`) VALUES ('TQR16', 'Cecilia', 'Burman', 'cecilia@nackademin.se', '0832456899', 'Vallingby');
INSERT INTO `Skola`.`Lärare` (`Änstallningsnummer`, `Förnamn`, `Efternamn`, `E-post`, `Telefon`, `Ort`) VALUES ('TQR10', 'Iva', 'Mendes', 'iva@nackademin.se', '0832789302', 'Sollentuna');

COMMIT;

